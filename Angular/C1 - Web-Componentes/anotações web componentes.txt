


ANOTAÇÕES ANGULAR:

DOM = document object model:
Funciona como um sistema de árvore, onde o arquivo HTML escrito por mim passa por um processo chamado PARSED, para que então seja renderizado, o DOM quebra o documento em partes(parsed) sendo o primeiro elemento (container) um ele PAI, e seguintes sendo FILHOS do elemento PAI, todo documento que estiver abaixo de outro é seu FILHO e consequentemente o de cima é seu PAI
----------------------------------------------

SHADOW DOM (Árvore fantasma):
criar uma estrutura de árvore(DOM) para ser usada dentro da DOM do navegador, uma árvore dentro da árvore, onde temos total controle. É criada dentro de um dos elementos da árvore DOM do browser, encapsulando o código. Anexamos ela através de um CUSTOM ELEMENT (criando uma TAG html para chamar essa arvore fantasma)

- VANTAGENS: é possível isolar e trabalhar todas as complexidades de um elemento/coponente de forma isolada, tornando o código mais CLEAN (mostrando menos coisas).

OBS: criando uma classe para ser um MOLDE e ela herda(EXTENDS) os comportamentos de um elemento HTML (HTMLElement). - este é um conceito de POO.

- dentro de uma "CLASS" o primeiro método a ser executado é o "CONSTRUCTOR()" {
 e dentro dele o "super()";
} Que nada mais é do que uma chamada ao construtor que ele está herdando (do HTML)

THIS.ATTACKSHADOW() (this.attackShadow): Irá anexar uma sombra a arvore. 
EX de modelo:

class CardNews extends HTMLElement {
    constructor() {
        super();

        const shadow = this.attachShadow({mode: "open"}) // open opção padrão, que permite que outro JS influencie dentro dessa arvore.
    }
    
}

------------------------------------------
ANATOMIA E VANTAGENS DOS COMPONENTS:

um componente é um conjunto de elements (elements é um elemento isolado)

estilos podem ser adicionados ao component.

Também é possível criar uma PROP(propriedade) como o a TAG "img" possue o "src" que diz de onde a imagem vem também podemos criar um dinamismo para que não seja sempre um elemento estático.

por ex: criar uma propriedade name: que muda conforme quem o acessa.

********************************
OBS: sempre que for criar uma tag customizada(customElements) definir o nome com um "HÍFEN" para diferenciar a tag customizada das oririnais.

********************************





